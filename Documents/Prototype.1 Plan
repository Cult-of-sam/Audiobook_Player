
Prototype.1 Design (Rough outline to help)


 Play_book.c


#Include “player_wrapper.h”:

Functions

    1. Play()
    2. pause/resume()
    3. stop_audiobook()
    4. bookmark_audiobook () 
    5. quit_in_x_then_bookmark ()
    6. get_bookmark()
    7. get_total_audio_length()
    8. get_current_audio_position()
    9. set_audio_position()
    10. forward_audiobook()
    11. rewind_audiobook()


Pseudo code

Play()

    1. obtain file to load from user as argument
    2. setup VLC library
    3. get_total_audio_length() of audio book to determine how long to run the program
    4. check if audio book_record exists:
        1. ./manage_books “check bookmark for audio book”
        2. if exists:
            1. position = get_bookmark() from ./manage_books
            2.  set_audio_position(bookmark)
    • Else set bookmark to 0 (the beginning of audio book)
    • call Play(bookmark)

Pause/resume()

    1. Pause / resume depending on input

Rewind audiobook

    1. audio_pos = get_current_audio_position()
    2. new_pos = audio_pos – x time
    3. set_audio_position(new_pos)

Forward audiobook

    1. audio_pos = get_current_audio_position()
    2. new_pos = audio_pos + x time
    3. set_audio_position(new_pos)

Stop audiobook

    1. shutdown safely

Bookmark audiobook

    1. audio_pos = get_current_audio_position()
    2. ./manage_bookmarks “name (check if record exists otherwise create)” and audio_pos”

quit_in_x_then_bookmark audiobook

    1. time_to_quit = x seconds/minutes/hours + get_current_audio_position()
    2. keep checking and if: time_to_quit == get_current_audio_position():
        1. bookmark()
        2. stop_audiobook()




Manage_books.c


#include “record_manage.h”

Functions

    1. Add book_record ()
    2. delete book record ()
    3. query book record ()
    4. obtain book record bookmark ()
    5. send_bookmark_to_player()
    6. edit book_record()

Psuedo code

…..

Communication between the player.c and Manage_books.c

#include “program_communication.h”

Functions

…….

    1. Create an easy to use pipe wrapper library interface for both programs to use. And create/send and receive bookmarks for certain audio books etc. etc.

Pseudo code

…….

